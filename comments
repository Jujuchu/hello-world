python中有神奇的三种读操作：read、readline和readlines

read()  ： 一次性读取整个文件内容。推荐使用read(size)方法，size越大运行时间越长

readline()  ：每次读取一行内容。内存不够时使用，一般不太用

readlines()   ：一次性读取整个文件内容，并按行返回到list，方便我们遍历



一般小文件我们都采用read()，不确定大小你就定个size，大文件就用readlines()



1）我们先用read来完整读取一个小文件，代码如下：

f = open('test.py', 'r')
print(f.read())
f.close()                # 用完记得关闭
看看运行的结果：



我们看到这是一个打印Helllo World!的简单程序

同时也感受到打印小文件这种小任务确实交给read比较快



2）接着再来看readline，代码：

f = open('test.py', 'r')
print(f.readline())
f.close()
运行结果：



果然顾名思义，它只吝啬地给我打印了一行

我原文件test.py有五行文字，那么我打完一个test.py需要print五次，稍显麻烦，不过你也可以如下使用while循环：

f = open('test.py', 'r')
line = f.readline()
while line:
    print(line, end="")
    line = f.readline()
f.close()



3）最后再来看readlines，代码：

f = open('test.py', 'r')
print(f.readlines())
f.close()
运行结果：


它果然将我们的内容都放进一个list列表中，连空格和\n都保留了下来

接着我们写个循环去遍历它：

f = open('test.py', 'r')
for line in f.readlines():
    print(line, end="")
f.close()
因为print还会自动换行，我们利用end=""来取消

运行如图：



这样我们就得到了和用read差不多的内容了

但是readlines在读配置文件还是有一定优势的
————————————————
版权声明：本文为CSDN博主「姜亚轲」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/weixin_41656968/java/article/details/80205717


0.准备
假设a.txt的内容如下所示：

Hello
Welcome
What is the fuck...
1. read([size])方法
read([size])方法从文件当前位置起读取size个字节，若无参数size，则表示读取至文件结束为止，它范围为字符串对象

f = open("a.txt")
lines = f.read()
print lines
print(type(lines))
f.close()
输出结果：

Hello
Welcome
What is the fuck...
<type 'str'> #字符串类型
2.readline()方法
从字面意思可以看出，该方法每次读出一行内容，所以，读取时占用内存小，比较适合大文件，该方法返回一个字符串对象。

f = open("a.txt")
line = f.readline()
print(type(line))
while line:
    print line,
    line = f.readline()
f.close()
输出结果：

<type 'str'>
Hello
Welcome
What is the fuck...
3.readlines()方法读取整个文件所有行，保存在一个列表(list)变量中，每行作为一个元素，但读取大文件会比较占内存。
f = open("a.txt")
lines = f.readlines()
print(type(lines))
for line in lines:
    print line，
f.close()
输出结果：
<type 'list'>
Hello
Welcome
What is the fuck...

4.linecache模块
当然，有特殊需求还可以用linecache模块，比如你要输出某个文件的第n行：

# 输出第2行
text = linecache.getline(‘a.txt’,2)
print text,
对于大文件效率还可以。

作者：大阿拉伯人
链接：https://www.jianshu.com/p/a672f39287c4
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
